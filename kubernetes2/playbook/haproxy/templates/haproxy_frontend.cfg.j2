### THIS FILE IS GENERATED BY setup.rb ###
### Template file is templates/playbook/haproxy_frontend.cfg.j2.template
global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	##ca-base /etc/ssl/certs
	##crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	##ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	##ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


##
## External CoreDNS
##
frontend coredns
     bind *:53
     default_backend coredns

backend coredns
     server localhost 127.0.0.1:53 maxconn 32

##
## kube-apiserver pub側用 こちらも再考
##
frontend api_frontend
     bind *:6443
     mode tcp
     option tcplog
     default_backend api_servers

backend api_servers
     mode tcp
     balance roundrobin
     option ssl-hello-chk
     default-server inter 10s fall 2
     server master1 172.16.1.21:6443 check


##
## Ingress Controler用の設定は、rubyから設定するのではなく、コントローラーから設定する方向へ変更
##
#frontend ingress_http
#     bind {{ front_proxy_vip_nomask }}:80
#     mode tcp
#     option tcplog
#     default_backend be_ingress_http
#backend be_ingress_http
#     mode tcp
#     balance roundrobin
#     option forwardfor
#     cookie INGRESS insert
#     server node1 172.16.1.41:31080 cookie node1 check
#     server node2 172.16.1.42:31080 cookie node2 check
#     server node3 172.16.1.43:31080 cookie node3 check
#     server node4 172.16.1.44:31080 cookie node4 check
#
#frontend ingress_https
#     bind {{ front_proxy_vip_nomask }}:443
#     mode tcp
#     option tcplog
#     default_backend be_ingress_https
#backend be_ingress_https
#     mode tcp
#     balance roundrobin
#     option forwardfor
#     cookie INGRESS insert
#     server node1 172.16.1.41:31443 cookie node1 check
#     server node2 172.16.1.42:31443 cookie node2 check
#     server node3 172.16.1.43:31443 cookie node3 check
#     server node4 172.16.1.44:31443 cookie node4 check


#0123456789----------------------------------

