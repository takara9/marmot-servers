- name: install cephadm
  shell: |
    apt install -y cephadm
  args:
    chdir: /root

- name: start node1 as bootstrap node
  shell: |
    cephadm bootstrap --mon-ip 172.16.0.31
  args:
    chdir: /root
  register: bootstrap

- name: Bootstrap
  debug: msg="{{ bootstrap.stderr_lines }}"

- name: write to file
  ansible.builtin.copy:
    content: "{{ bootstrap.stderr_lines }}"
    dest: "/nfs/ceph/bootstrap.json"

- name: copy password extract script
  template:
    src: extract_password.py
    dest: /usr/local/bin/extract_password.py
    owner: root
    group: root
    mode: '0755'

- name: save admin password 
  shell: |
    cat bootstrap.json | /usr/local/bin/extract_password.py > ceph_admin_passwd.txt
  args:
    executable: /bin/bash
    chdir: /nfs/ceph

#  待ちが必要
- wait_for:
    timeout: 10

- name: add device of node1 as osd
  shell: |
    cephadm shell -- ceph orch daemon add osd node1:/dev/vdb
  args:
    chdir: /root

- name: copy pub key
  shell: |
    echo "{{ item.name }}"
    if [[ "{{ item.name }}" != "node1" ]]; then
      ssh-copy-id -f -i /etc/ceph/ceph.pub root@{{ item.pri_ip }}
    fi
  args:
    executable: /bin/bash
    chdir: /root
  loop: "{{ nodes }}"
  register: shell_log1

- debug: msg="{{ shell_log1 }}"


#  待ちが必要
- wait_for:
    timeout: 30

- name: add Ceph node
  shell: |
    if [[ "{{ item.name }}" != "node1" ]]; then
      cephadm shell -- ceph orch host add {{ item.name }} {{ item.pri_ip }}
    fi
  args:
    chdir: /root
    executable: /bin/bash
  loop: "{{ nodes }}"
  register: shell_log2

- debug: msg="{{ shell_log2 }}"


#  待ちが必要
- wait_for:
    timeout: 30

## node1 を除外する必要がある
- name: add dev as OSD
  shell: |
      if [[ "{{ item.name }}" != "node1" ]]; then
        cephadm shell -- ceph orch daemon add osd {{ item.name }}:/dev/vdb
      fi
  args:
    chdir: /root
    executable: /bin/bash
  loop: "{{ nodes }}"
  register: shell_log3

- debug: msg="{{ shell_log3 }}"


- name: change device class from hdd to ssd
  shell: |
    cephadm shell -- ceph osd crush rm-device-class {{ item.ids }}
    cephadm shell -- ceph osd crush set-device-class --class=ssd --ids={{ item.ids }}
  args:
    chdir: /root
    executable: /bin/bash
  loop: "{{ nodes }}"


- name: Set 3 mon nodes 
  shell: |
      cephadm shell -- ceph config set mon public_network 172.16.0.0/16
      cephadm shell -- ceph orch apply mon --placement="node1,node2,node3"     
  args:
    chdir: /root
  register: check_status

- name: Check Status
  shell: |
      cephadm shell -- ceph status
  args:
    chdir: /root
  register: check_status

- name: Check Status XXXXXXXXXx
  debug: msg="{{ check_status.stderr_lines }}"


- name: Waitting for statble befor Block storage
  wait_for:
    timeout: 30

#------------------------------------------------------------------------
# ブロックストレージ
#
#- name: install create pool blk_data
#  command: cephadm shell -- ceph osd pool create blk_data 16
#  args:
#    chdir: /root
#- name: enable blk_data
#  command: cephadm shell -- ceph osd pool application enable blk_data rbd
#  args:
#    chdir: /root

#- name: create kubernetes pool
#  command: cephadm shell -- ceph osd pool create kubernetes 32
#  args:
#    chdir: /root
#- name: init rbd pool
#  command: cephadm shell -- rbd pool init kubernetes
#  args:
#    chdir: /root
#- name: ceph auth get-or-create
#  command: cephadm shell -- ceph auth get-or-create client.kubernetes mon 'profile rbd' osd 'profile rbd pool=kubernetes' mgr 'profile rbd pool=kubernetes'
#  args:
#    chdir: /root
#  register: client_kubernetes_blk

- name: create kubernetes pool
  command: cephadm shell -- ceph osd pool create rbd 32
  args:
    chdir: /root
- name: init rbd pool
  command: cephadm shell -- rbd pool init rbd
  args:
    chdir: /root

- name: enable rbd pool
  command: cephadm shell -- ceph osd pool application enable rbd rbd
  args:
    chdir: /root

- name: ceph auth get-or-create
  command: cephadm shell -- ceph auth get-or-create client.rbd mon 'profile rbd' osd 'profile rbd pool=rbd' mgr 'profile rbd pool=rbd'
  args:
    chdir: /root
  register: client_kubernetes_blk
- name: CLIENT KUBERNETES
  debug: msg="{{ client_kubernetes_blk }}"
- name: write to file
  ansible.builtin.copy:
    content: "{{ client_kubernetes_blk.stdout_lines }}"
    dest: "/nfs/ceph/client_kubernetes_blk.json"
- name: extract key
  shell:
     cat /nfs/ceph/client_kubernetes_blk.json |sed "s/\\\t//g" |python3 -c 'import json,sys;print(json.load(sys.stdin)[1])' |awk '{print $3}' > /nfs/ceph/kubernets_blk.key


- name: Waitting for statble befor FILE storage
  wait_for:
    timeout: 30

#
# ファイルストレージ
#
#- name: create mds
#  command: cephadm shell -- ceph fs volume create meta_svr
#  args:
#    chdir: /root

#- name: create pool cephfs_data
#  command: cephadm shell -- ceph osd pool create cephfs_data 32
#  args:
#    chdir: /root

#- name: create pool meta data
#  command: cephadm shell -- ceph osd pool create cephfs_metadata 16
#  args:
#    chdir: /root

#- name: create cephfs
#  command: cephadm shell -- ceph fs new cephfs cephfs_metadata cephfs_data
#  args:
#    chdir: /root

- name: create cephfs
  command: cephadm shell -- ceph fs volume create fs1 --placement="node3,node4,node5"
  args:
    chdir: /root

#- name: create user
#  command: cephadm shell -- ceph auth get-or-create client.cephfs mon 'allow r' osd 'allow rw tag cephfs *=*' mgr 'allow rw' mds 'allow rw'
#  args:
#    chdir: /root

- name: create user
  command: cephadm shell -- ceph auth get-or-create client.fs1 mon 'allow r' osd 'allow rw tag cephfs *=*' mgr 'allow rw' mds 'allow rw'
  args:
    chdir: /root
  register: client_kubernetes_cephfs
#- name: create user2
#  command: cephadm shell -- ceph fs authorize fs1 client.fs1 / rw
#  args:
#    chdir: /root
#  register: client_kubernetes_cephfs
- debug: msg="{{ client_kubernetes_cephfs }}"

- name: write to file
  ansible.builtin.copy:
    content: "{{ client_kubernetes_cephfs.stdout_lines }}"
    dest: "/nfs/ceph/client_kubernetes_cephfs.json"

- name: extract key
  shell:
     cat /nfs/ceph/client_kubernetes_cephfs.json |sed "s/\\\t//g" |python3 -c 'import json,sys;print(json.load(sys.stdin)[1])' |awk '{print $3}' > /nfs/ceph/kubernets_cephfs.key


- name: Waitting for statble befor Object storage
  wait_for:
    timeout: 30

#
# オブジェクトストレージ
#
#- name: need setup rados gateway
#  command: cephadm shell -- ceph status

#- name: create pool
#  command: cephadm shell -- ceph osd pool create obj_data 4
#  args:
#    chdir: /root
#- name: create map
#  command: cephadm shell -- ceph osd map obj_data obj01
#  args:
#    chdir: /root
#- name: set mon
#  command: cephadm shell -- ceph config set mon auth_allow_insecure_global_id_reclaim false
#  args:
#    chdir: /root
#  register: client_kubernetes_obs
#- debug: msg="{{ client_kubernetes_obs }}"
#- name: write to file
#  ansible.builtin.copy:
#    content: "{{ client_kubernetes_obs.stdout_lines }}"
#    dest: "/nfs/ceph/client_kubernetes_obs.json"
